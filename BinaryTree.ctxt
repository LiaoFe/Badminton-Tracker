#BlueJ class context
comment0.target=BinaryTree
comment0.text=\r\n\ A\ class\ that\ acts\ as\ an\ abstract\ data\ type\ to\ help\ sort\ players\ by\ their\ different\ statistics\r\n\ \r\n\ @author\ Felix\ Liao\r\n\ \r\n\ @version\ 13\ March\ 26,\ 2020\r\n\ \r\n\ @see\ https\://www.baeldung.com/java-binary-tree\ the\ website\ that\ this\ was\ learned\ from\r\n
comment1.params=
comment1.target=BinaryTree.Node\ getRoot()
comment1.text=\r\n\ Gets\ the\ root\ of\ this\ tree\r\n\ \r\n\ @return\ the\ root\ Node\ of\ the\ tree\r\n
comment2.params=current\ player
comment2.target=BinaryTree.Node\ addRecursiveExp(BinaryTree.Node,\ PlayerButton)
comment2.text=\r\n\ A\ method\ using\ recursive\ algorithm\ to\ add\ nodes\ to\ the\ tree\ which\ adds\ by\ comparing\ the\ playerButton's\ player\ object's\ experience\r\n\ \r\n\ @return\ the\ playerButton\ that\ is\ stored\ in\ each\ node\r\n\ \r\n\ @param\ current\ the\ node\ that\ will\ be\ added\ through\ the\ recursive\ method\r\n\ \r\n\ @param\ player\ the\ playerButton\ of\ the\ node.\ The\ method\ gets\ and\ compares\ the\ objects\ experience\ to\ decide\ where\ to\ add\ it\ to\ the\ tree\r\n
comment3.params=current\ player
comment3.target=BinaryTree.Node\ addRecursiveWins(BinaryTree.Node,\ PlayerButton)
comment3.text=\r\n\ A\ method\ using\ recursive\ algorithm\ to\ add\ nodes\ to\ the\ tree\ which\ adds\ by\ comparing\ the\ playerButton's\ player\ object's\ wins\r\n\ \r\n\ @return\ the\ playerButton\ that\ is\ stored\ in\ each\ node\r\n\ \r\n\ @param\ current\ the\ node\ that\ will\ be\ added\ through\ the\ recursive\ method\r\n\ \r\n\ @param\ player\ the\ playerButton\ of\ the\ node.\ The\ method\ gets\ and\ compares\ the\ objects\ wins\ to\ decide\ where\ to\ add\ it\ to\ the\ tree\r\n
comment4.params=current\ player
comment4.target=BinaryTree.Node\ addRecursivePoints(BinaryTree.Node,\ PlayerButton)
comment4.text=\r\n\ A\ method\ using\ recursive\ algorithm\ to\ add\ nodes\ to\ the\ tree\ which\ adds\ by\ comparing\ the\ playerButton's\ player\ object's\ points\r\n\ \r\n\ @return\ the\ playerButton\ that\ is\ stored\ in\ each\ node\r\n\ \r\n\ @param\ current\ the\ node\ that\ will\ be\ added\ through\ the\ recursive\ method\r\n\ \r\n\ @param\ player\ the\ playerButton\ of\ the\ node.\ The\ method\ gets\ and\ compares\ the\ objects\ points\ to\ decide\ where\ to\ add\ it\ to\ the\ tree\r\n
comment5.params=value
comment5.target=void\ addWins(PlayerButton)
comment5.text=\r\n\ Adds\ the\ PlayerButton\ object\ to\ the\ tree\ by\ calling\ resursive\ adding\ method\ which\ looks\ at\ a\ playerButton's\ player's\ wins\r\n\ \r\n\ @param\ vale\ the\ PlayerButton\ that\ will\ be\ added\ to\ the\ tree\r\n
comment6.params=value
comment6.target=void\ addExp(PlayerButton)
comment6.text=\r\n\ Adds\ the\ PlayerButton\ object\ to\ the\ tree\ by\ calling\ resursive\ adding\ method\ which\ looks\ at\ a\ playerButton's\ player's\ experience\r\n\ \r\n\ @param\ vale\ the\ PlayerButton\ that\ will\ be\ added\ to\ the\ tree\r\n
comment7.params=value
comment7.target=void\ addPoints(PlayerButton)
comment7.text=\r\n\ Adds\ the\ PlayerButton\ object\ to\ the\ tree\ by\ calling\ resursive\ adding\ method\ which\ looks\ at\ a\ playerButton's\ player's\ points\r\n\ \r\n\ @param\ vale\ the\ PlayerButton\ that\ will\ be\ added\ to\ the\ tree\r\n
comment8.params=node
comment8.target=void\ traverseInOrder(BinaryTree.Node)
comment8.text=\r\n\ A\ method\ that\ uses\ a\ recursive\ algorithm\ to\ traverse\ the\ tree\ while\ adding\ the\ node\ objects\ to\ a\ LinkedList\ which\ will\ be\ sorted\ by\ the\ value\ the\ tree\ is\ sorted\ by.\r\n\ \r\n\ @param\ node\ the\ node\ which\ contains\ a\ PlayerButton\r\n
comment9.params=
comment9.target=java.util.LinkedList\ getSorted()
comment9.text=\r\n\ Adds\ the\ sorted\ list\ into\ a\ LinkedList\ with\ the\ object\ type\ PlayerButtton.\ Returns\ the\ new\ list.\r\n\ \r\n\ @return\ LinkedList<PlayerButton>\ returns\ the\ new\ sorted\ list\ of\ PlayerButtons\r\n
numComments=10
